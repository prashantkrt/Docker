
##Basic Commands for Devops##

yum install docker
docker --version
docker info
service docker start 
docker info

docker images 
docker ps 
docker ps -a
docker run hello-world
docker images 
docker ps -a 
docker ps 
docker run -it ubuntu bash
docker images 
docker ps
docker ps -a

// detach interative mode
docker run -dit -p 80:80 nginx

docker stop containerName

##docker remove

docker rm containerName/id
docker rm -f containerId/Name // force delete
docker rmi imageName/id

## docker run
docker run -i -t -d nginx  // - interactive - terminal - detach (-dit)

#assigning the name instead of random name
docker run -idt --name=myserver nginx  // assigning your name
docker stop myserver

// -p hostPort(localMachine):containerPort
docker run -itd --name=mynewserver -p 8000:80 nginx

//remove multiple containers
docker rm ba9f55 4e0c9ba

docker pause containerName
docker restart containerName

##docker commit

// running the ubuntu
docker run -idt ubuntu 
docker exec -it b83f2 bash

apt-get update
//installing the apace server
apt-get install apache2

service apache2 status 
service apache2 start
exit

//once modified create the image of the upbuntu container
docker commit b83f27 myubuntu

docker run -dit --name=myubuntucontainer myubuntu
docker exec 34faa6 ls

docker exec -it 34faa6 bash
ls 

##Docker MYSQL

docker run -dit -p 6666:3306 --name=docker-mysql --env="MYSQL_ROOT_PASSWORD=test1234" --env="MYSQL_DATABASE=emp" --env="MYSQL_USER=root" mysql

//works 
 docker run -dit -p 6666:3306 --name=docker-mysql2 --env="MYSQL_ROOT_PASSWORD=test1234" --env="MYSQL_DATABASE=emp"  mysql

docker exec -it docker-mysql bash
bash-5.1#  mysql -uroot -p // mysql -uprovideUserName -p //provide pass i.e test1234
mysql> show databases
mysql> show tables 
mysql> use emp;
mysql> exit;

# mysql -uroot -p 
test1234
mysql> show databases;
mysql> show tables; 


##Volumes and Bind Mount
Bind Mount : uses folder in the host machine to commuicate the data
Volume : Created will be maintained within the docker /var/lib/docker/volumes

//Using Volume 
docker volume ls  // lsit the voulmes 
docker volume create myvolume 

docker run -dit --mount source=myvolume,destination=/tmp nginx
ls /var/lib/docker/volumes
ls /var/lib/docker/volumes/myvolume/_data

docker exec -it acbf bash
cd /tmp
ls
touch myfile.txt //create file
exit 

//verify  again
ls /var/lib/docker/volumes/myvolume/_data

//Using Bind Mount
mkdir mydata
pwd (root)

docker run -dit -v/root/mydata:/tmp ubuntu
docker exec -it b4df4 bash 
cd /tmp
touch file.txt
exit 

ls
cd mydata
ls  //verify


##Docker Network 
docker network ls 
docker network inspect bridge //details 

docker network create demonwk --subnet=172.19.0.0/16

docker run --name webserver --net demonwk --ip 172.19.0.2 -h web.anyhostname.com -p 81:80 -ti ubuntu /bin/bash

when you're working with Docker, pressing Ctrl + P followed by Ctrl + Q is used to detach from a running Docker container and leave it running in the background. 

The command : -> docker attach webserver  , allows you to attach your terminal session to a running Docker container named webserver
docker attach webserver //reattach

//change the network or disconnect
docker network disconnect demonwk webserver
//verify 
docker network demonwk

//connecting to the new network (bridge)to my container webserver
docker network connect bridge webserver


















